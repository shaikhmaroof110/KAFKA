
spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: myGroup
spring.kafka.consumer.auto-offset-reset=earliest
#//if offset is not set then it will automatically reset.
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
# we don't need to convert key's in json serializer only values


spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer:org.springframework.kafka.support.serializer.JsonSerializer

######################################################



# Specify the trusted package where your class (e.g., User) is located
spring.kafka.consumer.properties.spring.kafka.value-deserializer.trusted.packages=com.DA.kafkademo.payload

# Define the class type for deserialization
spring.kafka.consumer.properties.spring.kafka.value-deserializer.value.default.type=com.DA.kafkademo.payload.User

